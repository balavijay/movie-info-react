{"version":3,"sources":["components/images/no_image.jpg","components/styles/StyledHeader.js","components/elements/Header/Header.js","config.js","components/styles/StyledGrid.js","components/elements/Grid/Grid.js","components/styles/StyledMovieThumb.js","components/elements/MovieThumb/MovieThumb.js","components/styles/StyledSpinner.js","components/elements/Spinner/Spinner.js","components/Home.js","components/hooks/useHomeFetch.js","components/styles/StyledNavigation.js","components/elements/Navigation/Navigation.js","components/styles/StyledMovieInfo.js","components/elements/MovieInfo/MovieInfo.js","components/styles/StyledActor.js","components/elements/Actor/Actor.js","components/Movie.js","components/hooks/useMovieFetch.js","components/NotFound.js","components/styles/GlobalStyle.js","components/App.js","index.js"],"names":["module","exports","StyledHeader","styled","div","Header","img","className","to","API_URL","API_KEY","POPULAR_BASE_URL","StyledGrid","StyledGridContent","Grid","header","children","StyledMovieThumb","MovieThumb","image","movieId","movieName","clickable","src","alt","StyledSpinner","Spinner","Home","searchTerm","useState","movies","state","setState","loading","setLoading","error","setError","fetchMovies","endpoint","a","fetch","json","result","prev","results","console","log","useEffect","sessionStorage","homeState","JSON","parse","setItem","stringify","useHomeFetch","map","movie","key","id","poster_path","IMAGE_BASE_URL","NoImage","original_title","StyledNavigation","Navigation","StyledMovieInfo","MovieInfo","title","StyledActor","Actor","actor","name","Movie","fetchData","useCallback","creditsEndpoint","creditsResult","actors","cast","localStorage","useMovieFetch","credit_id","NotFound","GlobalStyle","createGlobalStyle","App","path","default","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.11b7d0a3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/no_image.31f5bb1d.jpg\";","import styled from 'styled-components';\n\nexport const StyledHeader = styled.div`\n  background: #1c1c1c;\n  padding: 0 20px;\n  box-sizing: border-box;\n\n  .header-content {\n    max-width: 1280px;\n    min-height: 120px;\n    padding: 20px 0px;\n    margin: 0 auto;\n    box-sizing: border-box;\n    \n    color: #fff;\n    font-family: 'Abel',sans-serif;\n    font-size: 50px;\n    a {\n    color: #fff;\n    text-decoration: none;\n    }\n    \n\n    @media screen and (max-width: 500px) {\n      max-width: 1280px;\n      min-height: 0px;\n    }\n  }\n`;\n\nexport const StyledRMDBLogo = styled.img`\n  width: 250px;\n  margin-top: 20px;\n\n  @media screen and (max-width: 500px) {\n    width: 150px;\n    margin-top: 5px;\n  }\n`;\n\nexport const StyledTMDBLogo = styled.img`\n  width: 122px;\n  margin-top: 25px;\n  float: right;\n\n  @media screen and (max-width: 500px) {\n    display: inline-block;\n    width: 80px;\n    margin-top: 0px;\n  }\n`;\n","import React from 'react';\nimport { Link } from '@reach/router';\n\n\n\nimport { \n    StyledHeader, \n\n} from '../../styles/StyledHeader';\n\n\n\nconst Header = () => (\n<StyledHeader>\n  <div className=\"header-content\">\n    <Link to=\"/\">\n      Movie Info - React\n    </Link>\n\n  </div>\n</StyledHeader>\n)\n\nexport default Header;","// Configuration for TMDB\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\n// Read more about the API here: https://developers.themoviedb.org/\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '844dba0bfd8f3a4f3799f6130ef9e335';\n\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&query=`;\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}`;\n\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w342';\n\nexport { \n  SEARCH_BASE_URL, \n  POPULAR_BASE_URL,\n  API_URL, API_KEY, \n  IMAGE_BASE_URL, \n  BACKDROP_SIZE, \n  POSTER_SIZE \n};\n","import styled from 'styled-components';\n\nexport const StyledGrid = styled.div`\n  max-width: 1280px;\n  margin: 0 auto;\n  padding: 0 20px;\n  h1 {\n    font-family: 'Abel', sans-serif;\n    font-size: 42px;\n\n    @media screen and (max-width: 768px) {\n      font-size: 22px;\n    }\n  }\n`;\n\nexport const StyledGridContent = styled.div`\n  display: grid;\n  grid-template-columns: repeat(5, minmax(100px, 1fr));\n  grid-gap: 40px;\n  position: relative;\n\n  @media screen and (max-width: 1024px) {\n    grid-template-columns: repeat(4, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 768px) {\n    grid-template-columns: repeat(3, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 600px) {\n    grid-template-columns: repeat(2, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 375px) {\n    grid-template-columns: repeat(1, 1fr);\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { StyledGrid, StyledGridContent } from '../../styles/StyledGrid';\n\nconst Grid = ({ header, children }) => (\n  <StyledGrid>\n    <h1>{header}</h1>\n    <StyledGridContent>{children}</StyledGridContent>\n  </StyledGrid>\n)\n\nGrid.propTypes = {\n  header: PropTypes.string,\n}\n\nexport default Grid;","import styled from 'styled-components';\n\nexport const StyledMovieThumb = styled.div`\n  img {\n    width: 100%;\n    /* min-height: 340px; */\n \n    object-fit: cover;\n    border-radius: 5px;\n \n\n \n\n    .clickable {\n      cursor: pointer;\n    }\n\n    @keyframes animateMovieThumb {\n      from {\n        opacity: 0;\n      }\n      to {\n        opacity: 1;\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport { Link } from '@reach/router';\nimport PropTypes from 'prop-types';\n\nimport { StyledMovieThumb } from '../../styles/StyledMovieThumb';\n\nconst MovieThumb = ({ image, movieId, movieName, clickable }) => (\n  <StyledMovieThumb>\n    {clickable ? (\n      <Link to={`/${movieId}`}>\n        <img className=\"clickable\" src={image} alt=\"moviethumb\" />\n        <span>{movieName}</span>\n      </Link>\n    ) : (\n      <img src={image} alt=\"moviethumb\" />\n    )}\n  </StyledMovieThumb>\n)\n\nMovieThumb.propTypes = {\n  image: PropTypes.string,\n  movieId: PropTypes.number,\n  clickable: PropTypes.bool,\n}\n\nexport default MovieThumb;\n\n","import styled from 'styled-components';\n\nexport const StyledSpinner = styled.div`\n  border: 5px solid #f3f3f3; /* Light grey */\n  border-top: 5px solid #16d47b; /* Blue */\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n  animation: spin 0.8s linear infinite;\n  margin: 20px auto;\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n","import React from 'react';\n\nimport { StyledSpinner } from '../../styles/StyledSpinner';\n\nconst Spinner = () =><StyledSpinner />\n\nexport default Spinner;","import React from 'react';\nimport {\n  POSTER_SIZE,\n  IMAGE_BASE_URL,\n} from '../config';\n\n// import Components\nimport Grid from './elements/Grid/Grid';\nimport MovieThumb from './elements/MovieThumb/MovieThumb';\n\nimport Spinner from './elements/Spinner/Spinner';\n\n// Custom Hook\nimport { useHomeFetch } from './hooks/useHomeFetch';\n\nimport NoImage from './images/no_image.jpg';\n\nconst Home = () => {\n  const [\n    {\n      state: { movies  },\n      loading,\n      error,\n    },\n\n  ] = useHomeFetch();\n\n\n\n\n  if (error) return <div>Something went wrong ...</div>;\n  if (!movies[0]) return <Spinner />;\n\n  return (\n      <>\n        <Grid header={'Landing Page'}>\n          {movies.map(movie => (\n              <MovieThumb\n                  key={movie.id}\n                  clickable\n                  image={\n                    movie.poster_path\n                        ? IMAGE_BASE_URL + POSTER_SIZE + movie.poster_path\n                        : NoImage\n                  }\n                  movieId={movie.id}\n                  movieName={movie.original_title}\n              />\n          ))}\n        </Grid>\n        {loading && <Spinner />}\n\n      </>\n  );\n};\n\nexport default Home;\n","import { useState, useEffect } from 'react';\nimport { POPULAR_BASE_URL } from '../../config';\n\nexport const useHomeFetch = searchTerm => {\n  const [state, setState] = useState({ movies: [] });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  const fetchMovies = async endpoint => {\n    setError(false);\n    setLoading(true);\n\n    try {\n      const result = await (await fetch(endpoint)).json();\n      setState(prev => ({\n        ...prev,\n        movies: [...result.results],\n\n      }));\n    } catch (error) {\n      setError(true);\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  // Fetch popular movies initially on mount\n  useEffect(() => {\n    if (sessionStorage.homeState) {\n      setState(JSON.parse(sessionStorage.homeState));\n      setLoading(false);\n    } else {\n      fetchMovies(POPULAR_BASE_URL);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!searchTerm) {\n      sessionStorage.setItem('homeState', JSON.stringify(state));\n    }\n  }, [searchTerm, state]);\n\n  return [{ state, loading, error }, fetchMovies];\n};\n","import styled from 'styled-components';\n\nexport const StyledNavigation = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 70px;\n  background: #353535;\n  color: #fff;\n\n  .navigation-content {\n    max-width: 1280px;\n    margin: 0 auto;\n    padding: 0 20px;\n    width: 100%;\n\n    p {\n      font-family: 'Abel', sans-serif;\n      font-size: 22px;\n      float: left;\n      color: #fff;\n      padding-right: 10px;\n      text-decoration: none;\n\n      @media screen and (max-width: 768px) {\n        font-size: 16px;\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport { Link } from '@reach/router';\nimport PropTypes from 'prop-types';\n\nimport { StyledNavigation } from '../../styles/StyledNavigation';\n\nconst Navigation = ({ movie }) => (\n  <StyledNavigation>\n    <div className=\"navigation-content\">\n      <Link to=\"/\">\n        <p>Home</p>\n      </Link>\n      <p>|</p>\n      <p>{movie}</p>\n    </div>\n  </StyledNavigation>\n);\n\nNavigation.propTypes = {\n  movie: PropTypes.string,\n}\n\nexport default Navigation;\n","import styled from 'styled-components';\n \n\nexport const StyledMovieInfo = styled.div`\n \n  background-size: cover !important;\n  background-position: center !important;\n  width: 100%;\n  padding: 40px 20px;\n  box-sizing: border-box;\n  animation: animateMovieinfo 1s;\n\n  .movieinfo-content {\n    max-width: 1280px;\n    min-height: 450px;\n    margin: 0 auto;\n    background: rgb(0, 0, 0, 0.7);\n    border-radius: 20px;\n    position: relative;\n  }\n\n  .movieinfo-thumb {\n    width: 300px;\n    float: left;\n\n    @media screen and (max-width: 768px) {\n      width: 100% !important;\n    }\n  }\n\n  .movieinfo-text {\n    font-family: Arial, Helvetica, sans-serif;\n    padding: 40px;\n    color: #fff;\n    overflow: hidden;\n\n    h1 {\n      font-family: 'Abel', sans-serif;\n      font-size: 48px;\n      margin: 0;\n\n      @media screen and (max-width: 1000px) {\n        font-size: 32px !important;\n      }\n    }\n\n    h3 {\n      font-size: 16px;\n      line-height: 0;\n      margin-top: 30px;\n    }\n\n    p {\n      font-family: 'Abel', sans-serif;\n      font-size: 18px;\n      line-height: 26px;\n    }\n  }\n\n  .rating-director {\n    display: flex;\n    justify-content: flex-start;\n  }\n\n  .score {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 35px;\n    height: 35px;\n    background: #fff;\n    color: #000;\n    font-weight: 800;\n    border-radius: 25px;\n    margin: 0px 0 0 0;\n  }\n\n  .director {\n    margin: 0 0 0 40px;\n\n    p {\n      margin: 0;\n    }\n  }\n\n  @media screen and (max-width: 768px) {\n    min-height: 600px;\n    height: auto;\n  }\n\n  @keyframes animateMovieinfo {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport NoImage from '../../images/no_image.jpg';\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../../config';\n\nimport MovieThumb from '../MovieThumb/MovieThumb';\n\nimport { StyledMovieInfo } from '../../styles/StyledMovieInfo';\n\nconst MovieInfo = ({ movie }) => (\n  <StyledMovieInfo >\n    <div className=\"movieinfo-content\">\n      <div className=\"movieinfo-thumb\">\n        <MovieThumb\n          image={\n            movie.poster_path\n              ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\n              : NoImage\n          }\n          clickable={false}\n          alt=\"moviethumb\"\n        />\n      </div>\n      <div className=\"movieinfo-text\">\n        <h1>{movie.title}</h1>\n\n     \n\n      </div>\n    </div>\n  </StyledMovieInfo>\n);\n\nMovieInfo.propTypes = {\n  movie: PropTypes.object,\n  directors: PropTypes.array,\n}\n\nexport default MovieInfo;\n","import styled from 'styled-components';\n\nexport const StyledActor = styled.div`\n  font-family: 'Abel', sans-serif;\n  color: #fff;\n  background: #1c1c1c;\n  border-radius: 20px;\n  padding: 5px;\n  text-align: center;\n\n  img {\n    display: block;\n    width: 100%;\n    height: 200px;\n    object-fit: cover;\n    border-radius: 15px;\n  }\n\n  .actor-name {\n    display: block;\n    font-size: 18px;\n    margin: 10px 0 0 0;\n  }\n\n  .actor-character {\n    display: block;\n    font-size: 16px;\n    margin: 0 0 10px 0;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { StyledActor } from '../../styles/StyledActor';\n\nconst Actor = ({ actor }) => (\n  <StyledActor>\n\n    <span className=\"actor-name\">{actor.name}</span>\n\n  </StyledActor>\n);\n\nActor.propTypes = {\n  actor: PropTypes.object,\n}\n\nexport default Actor;\n","import React from 'react';\n\n// Components\nimport Navigation from './elements/Navigation/Navigation';\nimport MovieInfo from './elements/MovieInfo/MovieInfo';\nimport Actor from './elements/Actor/Actor';\nimport Grid from './elements/Grid/Grid';\nimport Spinner from './elements/Spinner/Spinner';\n\nimport { useMovieFetch } from './hooks/useMovieFetch';\n\nconst Movie = ({ movieId }) => {\n  const [movie, loading, error] = useMovieFetch(movieId);\n  console.log(movie);\n  if (error) return <div>Something went wrong ...</div>;\n  if (loading) return <Spinner />;\n\n  return (\n  <>\n    <Navigation movie={movie.original_title} />\n    <MovieInfo movie={movie} />\n\n    <Grid header=\"Cast\">\n      {movie.actors && movie.actors.map(actor => (\n        <Actor key={actor.credit_id} actor={actor} />\n      ))}     \n    </Grid>\n  </>\n  )\n};\n\nexport default Movie;","import { useState, useEffect, useCallback } from 'react';\nimport { API_URL, API_KEY } from '../../config';\n\nexport const useMovieFetch = movieId => {\n  const [state, setState] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  const fetchData = useCallback(async () => {\n    setError(false);\n    setLoading(true);\n\n    try {\n      const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\n      const result = await (await fetch(endpoint)).json();\n\n      const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n      const creditsResult = await (await fetch(creditsEndpoint)).json();\n \n\n      setState({\n        ...result,\n        actors: creditsResult.cast,\n    \n      })\n\n    } catch (error) {\n      setError(true);\n    }\n    setLoading(false);\n  }, [movieId])\n\n  useEffect(() => {\n    if (localStorage[movieId]) {\n      setState(JSON.parse(localStorage[movieId]));\n      setLoading(false);\n    } else {\n      fetchData();\n    }\n  }, [fetchData, movieId]);\n\n  useEffect(() => {\n    localStorage.setItem(movieId, JSON.stringify(state));\n  }, [movieId, state])\n\n  return [state, loading, error];\n}","import React from 'react';\n\nconst NotFound = () => <div>Whoooops ... nothing found here...</div>\n\nexport default NotFound;","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n`;\n","import React from 'react';\nimport { Router } from '@reach/router';\n\nimport Header from './elements/Header/Header';\nimport Home from './Home';\nimport Movie from './Movie';\nimport NotFound from './NotFound';\n\nimport { GlobalStyle } from './styles/GlobalStyle';\n\nconst App = () => (\n  <>\n    <Header />\n    <Router>\n      <Home path=\"/\" />\n      <Movie path=\"/:movieId\" />\n      <NotFound default />      \n    </Router>\n    <GlobalStyle />\n  </>\n)\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}